name: Terraform CI

on:
  workflow_dispatch: # Allows manual triggering of the workflow
  push:
    branches:
      - main # Triggers on pushes to the 'main' branch

env:
  # AWS credentials and region are set as environment variables for Terraform
  AWS_ACCESS_KEY_ID: ${{ secrets.MY_AWS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.MY_AWS_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ap-south-1

jobs:
  terraform:
    runs-on: ubuntu-latest # Specifies the runner environment
    defaults:
      run:
        shell: bash # Uses bash for all run commands in this job
        # IMPORTANT: Ensure this 'infra' directory exists at the root of your repository
        # and contains your Terraform (.tf) files and 'tfstate.config'.
        # If your .tf files are in the repository root, change this to '.'
        working-directory: infra

    steps:
      - name: Checkout code
        uses: actions/checkout@v3 # Checks out your repository code

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3 # Sets up Terraform CLI
        with:
          terraform_version: 1.5.7 # Specifies the Terraform version to use

      # Added for debugging: List contents of the working directory
      - name: List working directory contents
        run: ls -la .

      - name: Terraform Init
        # Initializes Terraform backend and modules.
        # -backend-config="tfstate.config": Uses the specified file for backend configuration.
        # -migrate-state: Migrates state if the backend configuration changes.
        run: terraform init -backend-config="tfstate.config" -migrate-state

      - name: Terraform Validate
        # Validates the Terraform configuration files.
        run: terraform validate

      - name: Terraform Plan
        # Generates an execution plan and saves it to 'planfile'.
        run: terraform plan -out=planfile

      - name: Upload Planfile
        uses: actions/upload-artifact@v4 # Uploads the generated planfile as an artifact
        with:
          name: planfile # Name of the artifact
          # Path to the planfile relative to the working-directory.
          # If working-directory is 'infra', then 'infra/planfile' becomes 'infra/infra/planfile' which is wrong.
          # It should just be 'planfile' if working-directory is 'infra'.
          # Corrected path assuming 'working-directory: infra'
          path: planfile

  apply:
    needs: terraform # This job depends on the 'terraform' job completing successfully
    runs-on: ubuntu-latest
    # This job only runs if manually triggered via workflow_dispatch
    if: github.event_name == 'workflow_dispatch'
    defaults:
      run:
        shell: bash
        # IMPORTANT: Ensure this 'infra' directory exists at the root of your repository
        # If your .tf files are in the repository root, change this to '.'
        working-directory: infra

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - name: Download Planfile
        uses: actions/download-artifact@v4 # Downloads the planfile artifact
        with:
          name: planfile # Name of the artifact to download
          # Path where the artifact should be downloaded.
          # If working-directory is 'infra', downloading to 'infra' means it will be at 'infra/planfile'.
          # This is correct for the 'terraform apply' step.
          path: infra

      # Added for debugging: List contents of the working directory after download
      - name: List working directory contents (after download)
        run: ls -la .

      - name: Terraform Apply
        # Applies the saved planfile.
        # -input=false: Prevents Terraform from prompting for input.
        run: terraform apply -input=false planfile

  destroy:
    runs-on: ubuntu-latest
    # This job only runs if manually triggered via workflow_dispatch
    if: github.event_name == 'workflow_dispatch'
    defaults:
      run:
        shell: bash
        # IMPORTANT: Ensure this 'infra' directory exists at the root of your repository
        # If your .tf files are in the repository root, change this to '.'
        working-directory: infra

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      # Added for debugging: List contents of the working directory
      - name: List working directory contents
        run: ls -la .

      - name: Terraform Init
        # Initializes Terraform backend for the destroy command.
        run: terraform init -backend-config="tfstate.config" -migrate-state

      - name: Terraform Destroy
        # Destroys all resources managed by the Terraform configuration.
        # --auto-approve: Automatically approves the destroy operation without prompting.
        run: terraform destroy --auto-approve
