name: Terraform CI/CD

on:
  workflow_dispatch:
    inputs:
      public_key:
        description: 'SSH Public Key for EC2 (e.g., ssh-rsa AAA...)'
        required: true
        type: string
      confirm_destroy:
        description: 'Type "yes" to confirm destroy'
        required: false
        default: 'no'

  push:
    branches:
      - main

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ap-south-1

jobs:
  terraform:
    name: Terraform Plan
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: cicdtf

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - name: Terraform Init
        run: terraform init

      - name: Terraform Format Check
        run: terraform fmt -check

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -out=planfile -var="public_key=${{ github.event.inputs.public_key || 'dummy-key' }}"

      - name: Upload Planfile
        uses: actions/upload-artifact@v4
        with:
          name: planfile-${{ github.run_id }}
          path: cicdtf/planfile
          retention-days: 1

  apply:
    name: Terraform Apply
    needs: terraform
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: cicdtf

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - name: Download Planfile
        uses: actions/download-artifact@v4
        with:
          name: planfile-${{ github.run_id }}
          path: cicdtf

      - name: Terraform Apply
        run: terraform apply -input=false planfile -var="public_key=${{ github.event.inputs.public_key }}"

  destroy:
    name: Terraform Destroy
    needs: apply
    if: github.event.inputs.confirm_destroy == 'yes' && github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: cicdtf

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - name: Terraform Init
        run: terraform init

      - name: Terraform Destroy
        run: terraform destroy -auto-approve -var="public_key=${{ github.event.inputs.public_key }}"
